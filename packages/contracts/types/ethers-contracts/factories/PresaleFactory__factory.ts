/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, BigNumberish, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../common.js"
  import type { PresaleFactory, PresaleFactoryInterface } from "../PresaleFactory.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "presale_",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "token_",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "initialFee",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "ownerAddress",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [],
    "name": "FailedDeployment",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "sent",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "required",
        "type": "uint256"
      }
    ],
    "name": "IncorrectPresaleCreationFee",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "balance",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "needed",
        "type": "uint256"
      }
    ],
    "name": "InsufficientBalance",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      }
    ],
    "name": "OwnableInvalidOwner",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "OwnableUnauthorizedAccount",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "previousOwner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "OwnershipTransferred",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "presale",
        "type": "address"
      }
    ],
    "name": "PresaleCreated",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "allPresales",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "string",
            "name": "name",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "symbol",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "supply",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "price",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "hardCap",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "softCap",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "startTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "endTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "softCapPrice",
            "type": "uint256"
          }
        ],
        "internalType": "struct PresaleParams",
        "name": "params",
        "type": "tuple"
      }
    ],
    "name": "createPresale",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getFactoryBalance",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "page",
        "type": "uint256"
      }
    ],
    "name": "getPaginatedPresales",
    "outputs": [
      {
        "internalType": "address[]",
        "name": "",
        "type": "address[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "page",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "pageSize",
        "type": "uint256"
      }
    ],
    "name": "getPaginatedPresalesDecreasingByCreation",
    "outputs": [
      {
        "internalType": "address[]",
        "name": "",
        "type": "address[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      }
    ],
    "name": "getUserCreatedTokens",
    "outputs": [
      {
        "internalType": "address[]",
        "name": "",
        "type": "address[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "presale",
    "outputs": [
      {
        "internalType": "contract Presale",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "presaleCreationFee",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "renounceOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_newFee",
        "type": "uint256"
      }
    ],
    "name": "setPresaleCreationFee",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "token",
    "outputs": [
      {
        "internalType": "contract MintableERC20",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "transferOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "withdrawFees",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "stateMutability": "payable",
    "type": "receive"
  }
] as const;

  const _bytecode = "0x60c060405234801561000f575f80fd5b50604051610de2380380610de283398101604081905261002e916100ec565b806001600160a01b03811661005c57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61006581610082565b50506001600160a01b03928316608052911660a052600155610136565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100e7575f80fd5b919050565b5f805f80608085870312156100ff575f80fd5b610108856100d1565b9350610116602086016100d1565b92506040850151915061012b606086016100d1565b905092959194509250565b60805160a051610c7d6101655f395f818161026a015261058f01525f818161029d01526105bb0152610c7d5ff3fe6080604052600436106100dc575f3560e01c8063c00be1a01161007c578063ee44375011610057578063ee4437501461021b578063f2fde38b1461023a578063fc0c546a14610259578063fdea8e0b1461028c575f80fd5b8063c00be1a0146101d7578063c5341bbb146101f6578063dcff36c014610209575f80fd5b8063715018a6116100b7578063715018a61461015157806380878418146101655780638da5cb5b14610188578063a9e1a14a146101b8575f80fd5b80630d30e9bc146100e7578063168269d714610108578063476343ee1461013d575f80fd5b366100e357005b5f80fd5b3480156100f2575f80fd5b50610106610101366004610a21565b6102bf565b005b348015610113575f80fd5b50610127610122366004610a38565b6102cc565b6040516101349190610a58565b60405180910390f35b348015610148575f80fd5b5061010661042a565b34801561015c575f80fd5b5061010661047d565b348015610170575f80fd5b5061017a60015481565b604051908152602001610134565b348015610193575f80fd5b505f546001600160a01b03165b6040516001600160a01b039091168152602001610134565b3480156101c3575f80fd5b506101a06101d2366004610a21565b610490565b3480156101e2575f80fd5b506101276101f1366004610aa3565b6104b8565b610106610204366004610ad0565b61052b565b348015610214575f80fd5b504761017a565b348015610226575f80fd5b50610127610235366004610a21565b6107b2565b348015610245575f80fd5b50610106610254366004610aa3565b6108f9565b348015610264575f80fd5b506101a07f000000000000000000000000000000000000000000000000000000000000000081565b348015610297575f80fd5b506101a07f000000000000000000000000000000000000000000000000000000000000000081565b6102c7610936565b600155565b6002546060908015806102dd575083155b156102f7575050604080515f815260208101909152610424565b5f83610304600187610b30565b61030e9190610b43565b905081811061032e575050604080515f8152602081019091529050610424565b838261033a8284610b5a565b111561034d5761034a8284610b30565b90505b5f8167ffffffffffffffff81111561036757610367610b08565b604051908082528060200260200182016040528015610390578160200160208202803683370190505b5090505f5b8281101561041d57600281856103ac600189610b30565b6103b69190610b30565b6103c09190610b30565b815481106103d0576103d0610b6d565b905f5260205f20015f9054906101000a90046001600160a01b03168282815181106103fd576103fd610b6d565b6001600160a01b0390921660209283029190910190910152600101610395565b5093505050505b92915050565b610432610936565b476104445f546001600160a01b031690565b6001600160a01b03166108fc8290811502906040515f60405180830381858888f19350505050158015610479573d5f803e3d5ffd5b5050565b610485610936565b61048e5f610962565b565b6002818154811061049f575f80fd5b5f918252602090912001546001600160a01b0316905081565b6001600160a01b0381165f9081526003602090815260409182902080548351818402810184019094528084526060939283018282801561051f57602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311610501575b50505050509050919050565b600154341461055f57600154604051631d50115d60e01b815234600482015260248101919091526044015b60405180910390fd5b60405130903480156108fc02915f818181858888f19350505050158015610588573d5f803e3d5ffd5b505f6105b37f00000000000000000000000000000000000000000000000000000000000000006109b1565b90505f6105df7f00000000000000000000000000000000000000000000000000000000000000006109b1565b90506001600160a01b0382166393d2392333836105fc8780610b81565b61060960208a018a610b81565b8a604001356040518863ffffffff1660e01b81526004016106309796959493929190610bf3565b5f604051808303815f87803b158015610647575f80fd5b505af1158015610659573d5f803e3d5ffd5b50506040516380d021a960e01b81523360048201526001600160a01b038581166024830152606087013560448301526080870135606483015260a0870135608483015260c087013560a483015260e087013560c483015261010087013560e483015230610104830152841692506380d021a99150610124015f604051808303815f87803b1580156106e8575f80fd5b505af11580156106fa573d5f803e3d5ffd5b5050600280546001810182555f9182527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0386169081179091556040519093507f8b27b1a9a5960fe85b0267737620545414f3bb7d104301f7ef6b397e7ebfc9939250a250335f9081526003602090815260408220805460018101825590835291200180546001600160a01b0319166001600160a01b039290921691909117905550565b600254606090600a5f8490036107d8575050604080515f81526020810190915292915050565b5f816107e5600187610b30565b6107ef9190610b43565b905082811061080f575050604080515f8152602081019091529392505050565b5f61081a8383610b5a565b9050838111156108275750825b5f6108328383610b30565b90505f8167ffffffffffffffff81111561084e5761084e610b08565b604051908082528060200260200182016040528015610877578160200160208202803683370190505b5090505f5b828110156108ed5760026108908287610b5a565b815481106108a0576108a0610b6d565b905f5260205f20015f9054906101000a90046001600160a01b03168282815181106108cd576108cd610b6d565b6001600160a01b039092166020928302919091019091015260010161087c565b50979650505050505050565b610901610936565b6001600160a01b03811661092a57604051631e4fbdf760e01b81525f6004820152602401610556565b61093381610962565b50565b5f546001600160a01b0316331461048e5760405163118cdaa760e01b8152336004820152602401610556565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f610424828280763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c175f526e5af43d82803e903d91602b57fd5bf38360781b176020526037600983f090506001600160a01b0381166104245760405163b06ebf3d60e01b815260040160405180910390fd5b5f60208284031215610a31575f80fd5b5035919050565b5f8060408385031215610a49575f80fd5b50508035926020909101359150565b602080825282518282018190525f918401906040840190835b81811015610a985783516001600160a01b0316835260209384019390920191600101610a71565b509095945050505050565b5f60208284031215610ab3575f80fd5b81356001600160a01b0381168114610ac9575f80fd5b9392505050565b5f60208284031215610ae0575f80fd5b813567ffffffffffffffff811115610af6575f80fd5b82016101208185031215610ac9575f80fd5b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b8181038181111561042457610424610b1c565b808202811582820484141761042457610424610b1c565b8082018082111561042457610424610b1c565b634e487b7160e01b5f52603260045260245ffd5b5f808335601e19843603018112610b96575f80fd5b83018035915067ffffffffffffffff821115610bb0575f80fd5b602001915036819003821315610bc4575f80fd5b9250929050565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b6001600160a01b0388811682528716602082015260a0604082018190525f90610c1f9083018789610bcb565b8281036060840152610c32818688610bcb565b9150508260808301529897505050505050505056fea264697066735822122033e0f220702cc3b643252f809be84c444330b19c3ab06d148a2f1a2a974faf0a64736f6c634300081a0033";

  
      type PresaleFactoryConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: PresaleFactoryConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class PresaleFactory__factory extends ContractFactory {
    
      constructor(...args: PresaleFactoryConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(presale_: AddressLike, token_: AddressLike, initialFee: BigNumberish, ownerAddress: AddressLike, overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(presale_, token_, initialFee, ownerAddress, overrides || {});
    };
    override deploy(presale_: AddressLike, token_: AddressLike, initialFee: BigNumberish, ownerAddress: AddressLike, overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(presale_, token_, initialFee, ownerAddress, overrides || {}) as Promise<PresaleFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): PresaleFactory__factory {
      return super.connect(runner) as PresaleFactory__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): PresaleFactoryInterface {
      return new Interface(_abi) as PresaleFactoryInterface;
    }
    
    override attach(address: string | Addressable): PresaleFactory {
      return super.attach(address) as PresaleFactory;
    }
  static connect(address: string, runner?: ContractRunner | null): PresaleFactory {
      return new Contract(address, _abi, runner) as unknown as PresaleFactory;
    }
  }

  
  